<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
	<testsuite tests="50" failures="23" time="0.000000" name="github.com/anu1097/golang-mask-utility" timestamp="2022-03-06T11:46:55+05:30">
		<properties>
			<property name="go.version" value="go1.17.6 darwin/arm64"></property>
		</properties>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomValueFilter/string" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomValueFilter/string&#xA;    masking_test.go:83: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:83&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;Authorization: Bearer ************&#34;&#xA;        &#x9;            &#x9;actual  : &#34;Authorization: Bearer [filtered]&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-Authorization: Bearer ************&#xA;        &#x9;            &#x9;+Authorization: Bearer [filtered]&#xA;        &#x9;Test:       &#x9;TestCustomValueFilter/string&#xA;    --- FAIL: TestCustomValueFilter/string (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomValueFilter/struct" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomValueFilter/struct&#xA;    masking_test.go:105: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:105&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;************&#34;&#xA;        &#x9;            &#x9;actual  : &#34;[filtered]&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-************&#xA;        &#x9;            &#x9;+[filtered]&#xA;        &#x9;Test:       &#x9;TestCustomValueFilter/struct&#xA;    --- FAIL: TestCustomValueFilter/struct (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomValueFilter/array" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomValueFilter/array&#xA;    masking_test.go:119: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:119&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: []string{&#34;userId&#34;, &#34;data&#34;, &#34;************&#34;}&#xA;        &#x9;            &#x9;actual  : []string{&#34;userId&#34;, &#34;data&#34;, &#34;[filtered]&#34;}&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -3,3 +3,3 @@&#xA;        &#x9;            &#x9;  (string) (len=4) &#34;data&#34;,&#xA;        &#x9;            &#x9;- (string) (len=12) &#34;************&#34;&#xA;        &#x9;            &#x9;+ (string) (len=10) &#34;[filtered]&#34;&#xA;        &#x9;            &#x9; }&#xA;        &#x9;Test:       &#x9;TestCustomValueFilter/array&#xA;    --- FAIL: TestCustomValueFilter/array (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomValueFilter" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomValueFilter&#xA;=== CONT  TestCustomValueFilter&#xA;    masking_test.go:130: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:130&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: map[string]interface {}{&#34;data&#34;:&#34;************&#34;}&#xA;        &#x9;            &#x9;actual  : map[string]interface {}{&#34;data&#34;:&#34;[filtered]&#34;}&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1,3 +1,3 @@&#xA;        &#x9;            &#x9; (map[string]interface {}) (len=1) {&#xA;        &#x9;            &#x9;- (string) (len=4) &#34;data&#34;: (string) (len=12) &#34;************&#34;&#xA;        &#x9;            &#x9;+ (string) (len=4) &#34;data&#34;: (string) (len=10) &#34;[filtered]&#34;&#xA;        &#x9;            &#x9; }&#xA;        &#x9;Test:       &#x9;TestCustomValueFilter&#xA;--- FAIL: TestCustomValueFilter (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomTypeFilter/Type_Filter_with_Mask_Type" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomTypeFilter/Type_Filter_with_Mask_Type&#xA;    masking_test.go:395: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:395&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;************&#34;&#xA;        &#x9;            &#x9;actual  : &#34;abcd1234&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1,2 +1,2 @@&#xA;        &#x9;            &#x9;-(mask.password) (len=12) &#34;************&#34;&#xA;        &#x9;            &#x9;+(mask.password) (len=8) &#34;abcd1234&#34;&#xA;        &#x9;            &#x9; &#xA;        &#x9;Test:       &#x9;TestCustomTypeFilter/Type_Filter_with_Mask_Type&#xA;    --- FAIL: TestCustomTypeFilter/Type_Filter_with_Mask_Type (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomTypeFilter" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomTypeFilter&#xA;--- FAIL: TestCustomTypeFilter (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestTypeFilter/Default_Type_Filter" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestTypeFilter/Default_Type_Filter&#xA;    masking_test.go:422: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:422&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;[filtered]&#34;&#xA;        &#x9;            &#x9;actual  : &#34;abcd1234&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1,2 +1,2 @@&#xA;        &#x9;            &#x9;-(mask.password) (len=10) &#34;[filtered]&#34;&#xA;        &#x9;            &#x9;+(mask.password) (len=8) &#34;abcd1234&#34;&#xA;        &#x9;            &#x9; &#xA;        &#x9;Test:       &#x9;TestTypeFilter/Default_Type_Filter&#xA;    --- FAIL: TestTypeFilter/Default_Type_Filter (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestTypeFilter" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestTypeFilter&#xA;--- FAIL: TestTypeFilter (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestTagFilter/default_" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestTagFilter/default_&#xA;    masking_test.go:445: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:445&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;[filtered]&#34;&#xA;        &#x9;            &#x9;actual  : &#34;dummy@dummy.com&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-[filtered]&#xA;        &#x9;            &#x9;+dummy@dummy.com&#xA;        &#x9;Test:       &#x9;TestTagFilter/default_&#xA;    --- FAIL: TestTagFilter/default_ (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestTagFilter/custom_" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestTagFilter/custom_&#xA;    masking_test.go:468: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:468&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;dum****@dummy.com&#34;&#xA;        &#x9;            &#x9;actual  : &#34;dummy@dummy.com&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-dum****@dummy.com&#xA;        &#x9;            &#x9;+dummy@dummy.com&#xA;        &#x9;Test:       &#x9;TestTagFilter/custom_&#xA;    --- FAIL: TestTagFilter/custom_ (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestTagFilter" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestTagFilter&#xA;--- FAIL: TestTagFilter (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestPiiPhoneNumber/struct" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestPiiPhoneNumber/struct&#xA;    masking_test.go:503: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:503&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;[filtered]&#34;&#xA;        &#x9;            &#x9;actual  : &#34;090-0000-0000&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-[filtered]&#xA;        &#x9;            &#x9;+090-0000-0000&#xA;        &#x9;Test:       &#x9;TestPiiPhoneNumber/struct&#xA;    --- FAIL: TestPiiPhoneNumber/struct (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestPiiPhoneNumber" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestPiiPhoneNumber&#xA;=== CONT  TestPiiPhoneNumber&#xA;    masking_test.go:516: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:516&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: map[string]interface {}{&#34;phone&#34;:&#34;[filtered]&#34;}&#xA;        &#x9;            &#x9;actual  : map[string]interface {}{&#34;phone&#34;:interface {}(nil)}&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1,3 +1,3 @@&#xA;        &#x9;            &#x9; (map[string]interface {}) (len=1) {&#xA;        &#x9;            &#x9;- (string) (len=5) &#34;phone&#34;: (string) (len=10) &#34;[filtered]&#34;&#xA;        &#x9;            &#x9;+ (string) (len=5) &#34;phone&#34;: (interface {}) &lt;nil&gt;&#xA;        &#x9;            &#x9; }&#xA;        &#x9;Test:       &#x9;TestPiiPhoneNumber&#xA;--- FAIL: TestPiiPhoneNumber (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomPiiPhoneNumber/string" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomPiiPhoneNumber/string&#xA;    masking_test.go:528: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:528&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;090-***0-0000&#34;&#xA;        &#x9;            &#x9;actual  : &#34;[filtered]&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-090-***0-0000&#xA;        &#x9;            &#x9;+[filtered]&#xA;        &#x9;Test:       &#x9;TestCustomPiiPhoneNumber/string&#xA;    --- FAIL: TestCustomPiiPhoneNumber/string (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomPiiPhoneNumber/struct" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomPiiPhoneNumber/struct&#xA;    masking_test.go:548: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:548&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;090-***0-0000&#34;&#xA;        &#x9;            &#x9;actual  : &#34;090-0000-0000&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-090-***0-0000&#xA;        &#x9;            &#x9;+090-0000-0000&#xA;        &#x9;Test:       &#x9;TestCustomPiiPhoneNumber/struct&#xA;    --- FAIL: TestCustomPiiPhoneNumber/struct (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomPiiPhoneNumber" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomPiiPhoneNumber&#xA;=== CONT  TestCustomPiiPhoneNumber&#xA;    masking_test.go:561: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:561&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: map[string]interface {}{&#34;phone&#34;:&#34;090-***0-0000&#34;}&#xA;        &#x9;            &#x9;actual  : map[string]interface {}{&#34;phone&#34;:interface {}(nil)}&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1,3 +1,3 @@&#xA;        &#x9;            &#x9; (map[string]interface {}) (len=1) {&#xA;        &#x9;            &#x9;- (string) (len=5) &#34;phone&#34;: (string) (len=13) &#34;090-***0-0000&#34;&#xA;        &#x9;            &#x9;+ (string) (len=5) &#34;phone&#34;: (interface {}) &lt;nil&gt;&#xA;        &#x9;            &#x9; }&#xA;        &#x9;Test:       &#x9;TestCustomPiiPhoneNumber&#xA;--- FAIL: TestCustomPiiPhoneNumber (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestPiiEmail" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestPiiEmail&#xA;    masking_test.go:580: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:580&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;[filtered]&#34;&#xA;        &#x9;            &#x9;actual  : &#34;dummy@dummy.com&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-[filtered]&#xA;        &#x9;            &#x9;+dummy@dummy.com&#xA;        &#x9;Test:       &#x9;TestPiiEmail&#xA;--- FAIL: TestPiiEmail (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomPiiEmail" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomPiiEmail&#xA;    masking_test.go:602: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:602&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;dum****@dummy.com&#34;&#xA;        &#x9;            &#x9;actual  : &#34;dummy@dummy.com&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-dum****@dummy.com&#xA;        &#x9;            &#x9;+dummy@dummy.com&#xA;        &#x9;Test:       &#x9;TestCustomPiiEmail&#xA;--- FAIL: TestCustomPiiEmail (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestPiiCustomRegexNumber" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestPiiCustomRegexNumber&#xA;    masking_test.go:624: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:624&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;[filtered]&#34;&#xA;        &#x9;            &#x9;actual  : &#34;https://dummy-backend.getsimpl.com/v2/random&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-[filtered]&#xA;        &#x9;            &#x9;+https://dummy-backend.getsimpl.com/v2/random&#xA;        &#x9;Test:       &#x9;TestPiiCustomRegexNumber&#xA;--- FAIL: TestPiiCustomRegexNumber (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestFieldFilter" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestFieldFilter&#xA;=== CONT  TestFieldFilter&#xA;    masking_test.go:648: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:648&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;[filtered]&#34;&#xA;        &#x9;            &#x9;actual  : &#34;090-0000-0000&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-[filtered]&#xA;        &#x9;            &#x9;+090-0000-0000&#xA;        &#x9;Test:       &#x9;TestFieldFilter&#xA;--- FAIL: TestFieldFilter (0.00s)&#xA;=== RUN   TestFieldFilter/struct_with_no_specific_mask&#xA;    --- PASS: TestFieldFilter/struct_with_no_specific_mask (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomFieldFilter" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomFieldFilter&#xA;=== CONT  TestCustomFieldFilter&#xA;    masking_test.go:693: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:693&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;090-xxx0-0000&#34;&#xA;        &#x9;            &#x9;actual  : &#34;090-0000-0000&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-090-xxx0-0000&#xA;        &#x9;            &#x9;+090-0000-0000&#xA;        &#x9;Test:       &#x9;TestCustomFieldFilter&#xA;    masking_test.go:694: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:694&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;dumxxxx@dummy.com&#34;&#xA;        &#x9;            &#x9;actual  : &#34;dummy@dummy.com&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-dumxxxx@dummy.com&#xA;        &#x9;            &#x9;+dummy@dummy.com&#xA;        &#x9;Test:       &#x9;TestCustomFieldFilter&#xA;    masking_test.go:695: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:695&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;userIdxxxx&#34;&#xA;        &#x9;            &#x9;actual  : &#34;userId&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-userIdxxxx&#xA;        &#x9;            &#x9;+userId&#xA;        &#x9;Test:       &#x9;TestCustomFieldFilter&#xA;    masking_test.go:696: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:696&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;Jxxn Dxxe&#34;&#xA;        &#x9;            &#x9;actual  : &#34;John Doe&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-Jxxn Dxxe&#xA;        &#x9;            &#x9;+John Doe&#xA;        &#x9;Test:       &#x9;TestCustomFieldFilter&#xA;    masking_test.go:697: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:697&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;1 AB Rxxxxxx&#34;&#xA;        &#x9;            &#x9;actual  : &#34;1 AB Road, Paradise&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-1 AB Rxxxxxx&#xA;        &#x9;            &#x9;+1 AB Road, Paradise&#xA;        &#x9;Test:       &#x9;TestCustomFieldFilter&#xA;    masking_test.go:698: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:698&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;4444-4xxxxxx44-4444&#34;&#xA;        &#x9;            &#x9;actual  : &#34;4444-4444-4444-4444&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-4444-4xxxxxx44-4444&#xA;        &#x9;            &#x9;+4444-4444-4444-4444&#xA;        &#x9;Test:       &#x9;TestCustomFieldFilter&#xA;    masking_test.go:699: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:699&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;http://admin:xxxxx@localhost:1234/uri&#34;&#xA;        &#x9;            &#x9;actual  : &#34;http://admin:mysecretpassword@localhost:1234/uri&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-http://admin:xxxxx@localhost:1234/uri&#xA;        &#x9;            &#x9;+http://admin:mysecretpassword@localhost:1234/uri&#xA;        &#x9;Test:       &#x9;TestCustomFieldFilter&#xA;--- FAIL: TestCustomFieldFilter (0.00s)&#xA;=== RUN   TestCustomFieldFilter/struct&#xA;    --- PASS: TestCustomFieldFilter/struct (0.00s)&#xA;=== RUN   TestCustomFieldFilter/map&#xA;    --- PASS: TestCustomFieldFilter/map (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestFieldPrefixFilter" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestFieldPrefixFilter&#xA;=== CONT  TestFieldPrefixFilter&#xA;    masking_test.go:736: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:736&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;[filtered]&#34;&#xA;        &#x9;            &#x9;actual  : &#34;090-0000-0000&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-[filtered]&#xA;        &#x9;            &#x9;+090-0000-0000&#xA;        &#x9;Test:       &#x9;TestFieldPrefixFilter&#xA;--- FAIL: TestFieldPrefixFilter (0.00s)&#xA;=== RUN   TestFieldPrefixFilter/default&#xA;    --- PASS: TestFieldPrefixFilter/default (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomFieldPrefixFilter" time="0.000000">
			<failure message="Failed" type="">=== RUN   TestCustomFieldPrefixFilter&#xA;=== CONT  TestCustomFieldPrefixFilter&#xA;    masking_test.go:763: &#xA;        &#x9;Error Trace:&#x9;masking_test.go:763&#xA;        &#x9;Error:      &#x9;Not equal: &#xA;        &#x9;            &#x9;expected: &#34;090-***0-0000&#34;&#xA;        &#x9;            &#x9;actual  : &#34;090-0000-0000&#34;&#xA;        &#x9;            &#x9;&#xA;        &#x9;            &#x9;Diff:&#xA;        &#x9;            &#x9;--- Expected&#xA;        &#x9;            &#x9;+++ Actual&#xA;        &#x9;            &#x9;@@ -1 +1 @@&#xA;        &#x9;            &#x9;-090-***0-0000&#xA;        &#x9;            &#x9;+090-0000-0000&#xA;        &#x9;Test:       &#x9;TestCustomFieldPrefixFilter&#xA;--- FAIL: TestCustomFieldPrefixFilter (0.00s)&#xA;=== RUN   TestCustomFieldPrefixFilter/custom&#xA;    --- PASS: TestCustomFieldPrefixFilter/custom (0.00s)&#xA;</failure>
		</testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestDefaultValueFilter/string" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestDefaultValueFilter/struct" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestDefaultValueFilter/array" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestDefaultValueFilter/map" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestDefaultValueFilter" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomValueFilter/map" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestVariousDatastructuresForVariousScenarios/struct/original_data_is_not_modified_when_filtered" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestVariousDatastructuresForVariousScenarios/struct/non-ptr_struct_can_be_modified" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestVariousDatastructuresForVariousScenarios/struct/nested_structure_can_be_modified" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestVariousDatastructuresForVariousScenarios/struct/unexported_field_is_also_copied" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestVariousDatastructuresForVariousScenarios/struct/original_type" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestVariousDatastructuresForVariousScenarios/struct/various_field" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestVariousDatastructuresForVariousScenarios/struct/map_data" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestVariousDatastructuresForVariousScenarios/struct/array_data" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestVariousDatastructuresForVariousScenarios/struct/array_data_with_ptr" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestVariousDatastructuresForVariousScenarios/struct" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestVariousDatastructuresForVariousScenarios" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestAllFieldFilter/filter_various_type" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestAllFieldFilter" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestPiiPhoneNumber/string" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestPiiPhoneNumber/map" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomPiiPhoneNumber/map" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestFieldFilter/struct_with_no_specific_mask" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomFieldFilter/struct" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomFieldFilter/map" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestFieldPrefixFilter/default" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility" name="TestCustomFieldPrefixFilter/custom" time="0.000000"></testcase>
	</testsuite>
	<testsuite tests="0" failures="0" time="0.000000" name="github.com/anu1097/golang-mask-utility/filter" timestamp="2022-03-06T11:46:55+05:30">
		<properties>
			<property name="go.version" value="go1.17.6 darwin/arm64"></property>
		</properties>
	</testsuite>
	<testsuite tests="111" failures="0" time="0.000000" name="github.com/anu1097/golang-mask-utility/masker" timestamp="2022-03-06T11:46:55+05:30">
		<properties>
			<property name="go.version" value="go1.17.6 darwin/arm64"></property>
		</properties>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_overlay/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_overlay/Happy_Pass" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_overlay/Start_Less_Than_0" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_overlay/Start_Greater_Than_Length" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_overlay/End_Less_Than_0" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_overlay/Start_Less_Than_End" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_overlay" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_String/Error_Mask_Type" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_String/Password" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_String/Name" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_String/Address" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_String/Email" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_String/Mobile" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_String/ID" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_String/Telephone" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_String/CreditCard" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_String" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Name/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Name/Length_1" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Name/Length_2" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Name/Length_3" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Name/Length_4" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Name/Length_5" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Name/Length_6" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Name/English_Full_Name" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Name" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_ID/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_ID/Happy_Pass" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_ID/Length_Less_Than_6" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_ID/Length_Less_Than_6#01" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_ID/Length_Between_6_and_10" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_ID" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Address/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Address/Long_Address" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Address/Length_Less_Than_6" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Address" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_CreditCard/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_CreditCard/VISA_JCB_MasterCard" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_CreditCard/American_Express" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_CreditCard" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Email/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Email/Happy_Pass" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Email/Address_Less_Than_3" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Email/Invalid_email_format" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Email" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Mobile/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Mobile/Happy_Pass" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Mobile/Happy_Pass#01" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Mobile" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Telephone/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Telephone/With_Special_Chart" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Telephone/Happy_Pass" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Telephone/Happy_Pass#01" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Telephone/Length_Not_Eq_8_or_10" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Telephone" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Password/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Password/Happy_Pass" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Password/Happy_Pass#01" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMasker_Password" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestNew/New_Instance" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestNew" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestString/Error_Mask_Type" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestString/Password" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestString/Name" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestString/Address" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestString/Email" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestString/Mobile" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestString/ID" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestString/Telephone" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestString/CreditCard" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestString" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestName/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestName/Length_1" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestName/Length_2" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestName/Length_3" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestName/Length_4" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestName/Length_5" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestName/Length_6" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestName/English_Full_Name" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestName" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestID/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestID/Happy_Pass" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestID/Length_Less_Than_6" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestID/Length_Less_Than_6#01" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestID/Length_Between_6_and_10" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestID" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestAddress/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestAddress/Long_Address" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestAddress/Length_Less_Than_6" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestAddress" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestCreditCard/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestCreditCard/VISA_JCB_MasterCard" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestCreditCard/American_Express" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestCreditCard" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestEmail/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestEmail/Happy_Pass" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestEmail/Address_Less_Than_3" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestEmail" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMobile/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMobile/Happy_Pass" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMobile/Happy_Pass#01" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestMobile" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestTelephone/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestTelephone/With_Special_Chart" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestTelephone/Happy_Pass" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestTelephone/Happy_Pass#01" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestTelephone" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestPassword/Empty_Input" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestPassword/Happy_Pass" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestPassword/Happy_Pass#01" time="0.000000"></testcase>
		<testcase classname="github.com/anu1097/golang-mask-utility/masker" name="TestPassword" time="0.000000"></testcase>
	</testsuite>
</testsuites>